# Development environment values for cmf

# Override image for development
image:
  repository: cmf
  tag: dev
  pullPolicy: Always

# Development service configuration
service:
  type: ClusterIP
  port: 8088
  annotations: {}

# Development ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/websocket-services: "{{ include \"cmf.fullname\" . }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: cmf-dev.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Development resources (lower for cost optimization)
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 64Mi

# Development autoscaling (more conservative)
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 85

# Development environment variables
env:
  PORT: "8088"
  KAFKA_TOPIC: "ws-messages-dev"
  KAFKA_CLIENT_ID: "cmf-server-dev"
  KAFKA_GROUP_ID: "cmf-group-dev"
  KAFKA_BROKER: "kafka-dev-service:9092"

# Development replica count
replicaCount: 1


# Development pod annotations
podAnnotations:
  environment: "development"
  version: "dev"

# Development health checks (more lenient)
healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /health
      port: 8088
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /health
      port: 8088
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
